<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Hypervisor Checkins" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">candlepin.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="base_path" elementType="Argument">
            <stringProp name="Argument.name">base_path</stringProp>
            <stringProp name="Argument.value">/candlepin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="owner" elementType="Argument">
            <stringProp name="Argument.name">owner</stringProp>
            <stringProp name="Argument.value">foo</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">candlepin.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="base_path" elementType="Argument">
            <stringProp name="Argument.name">base_path</stringProp>
            <stringProp name="Argument.value">/candlepin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="owner" elementType="Argument">
            <stringProp name="Argument.name">owner</stringProp>
            <stringProp name="Argument.value">foo</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">cp-user</stringProp>
            <stringProp name="Header.value">admin</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${server}</stringProp>
        <stringProp name="HTTPSampler.port">8443</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group - Run Once" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1475337732000</longProp>
        <longProp name="ThreadGroup.end_time">1475337732000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Status" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${base_path}/status</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Owner" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;displayName&quot;: &quot;${owner}&quot;,&#xd;
	&quot;key&quot;: &quot;${owner}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${base_path}/owners</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group - create consumers and bind" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525704916000</longProp>
        <longProp name="ThreadGroup.end_time">1525704916000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Async Hypervisor Checkins" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525185121000</longProp>
        <longProp name="ThreadGroup.end_time">1525185121000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Use text/plain for hypervisor checkins" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">text/plain</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="60 seconds of hypervisor checkins" enabled="true">
          <stringProp name="RunTime.seconds">60</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Hypervisor checkin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;hypervisors&quot;: [&#xd;
        {&#xd;
            &quot;guestIds&quot;: [&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                }&#xd;
            ],&#xd;
            &quot;hypervisorId&quot;: {&#xd;
                &quot;hypervisorId&quot;: &quot;${__UUID}&quot;&#xd;
            }&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${base_path}/hypervisors/${owner}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">100 guests on 1 hypervisor</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Synchronous Hypervisor Checkins" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">20</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525700994000</longProp>
        <longProp name="ThreadGroup.end_time">1525700994000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <RunTime guiclass="RunTimeGui" testclass="RunTime" testname="60 seconds of hypervisor checkins" enabled="true">
          <stringProp name="RunTime.seconds">60</stringProp>
        </RunTime>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Syncronous Hypervisor checkin" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;${__UUID}&quot;: [&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                },&#xd;
                {&#xd;
                    &quot;guestId&quot;: &quot;${__UUID}&quot;,&#xd;
                    &quot;state&quot;: 5&#xd;
                }&#xd;
            ]&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${base_path}/hypervisors?owner=${owner}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">100 guests on 1 hypervisor</stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1525188346000</longProp>
        <longProp name="ThreadGroup.end_time">1525188346000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Delete owner" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${base_path}/owners/${owner}</stringProp>
          <stringProp name="HTTPSampler.method">DELETE</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
